#!/bin/bash

# Read this article to understand how gunicorn work
# with nginx and supervisor
# http://michal.karzynski.pl/blog/2013/06/09/django-nginx-gunicorn-virtualenv-supervisor/

NAME="backend"                                                  # Name of the application
DJANGODIR="<%= node.default['webapp']['backend'] %>" # Django project directory
SOCKFILE=$DJANGODIR/run/gunicorn.sock             # we will communicte using this unix socket
USER="<%= node[:user] %>"                                                     # the user to run as
GROUP="<%= node[:user] %>"                                                    # the group to run as
NUM_WORKERS=3                                                   # how many worker processes should Gunicorn spawn
DJANGO_SETTINGS_MODULE=backend.settings.run_environment                 # which settings file should Django use
DJANGO_WSGI_MODULE=backend.wsgi                                 # WSGI module name

echo "Starting $NAME as `whoami`"

# Activate the virtual environment

source "<%= node.default['webapp']['venv'] %>"/bin/activate

cd $DJANGODIR
export DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE
export PYTHONPATH=$DJANGODIR:$PYTHONPATH

# Create the run directory if it doesn't exist
RUNDIR=$(dirname $SOCKFILE)
test -d $RUNDIR || mkdir -p $RUNDIR

# Start your Django Unicorn
# Programs meant to be run under supervisor should not daemonize themselves (do not use --daemon)
exec gunicorn ${DJANGO_WSGI_MODULE}:application \
  --name $NAME \
  --workers $NUM_WORKERS \
  --user=$USER --group=$GROUP \
  --log-level=debug \
  --bind=127.0.0.1:8001
